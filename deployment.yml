apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: redisinsight-data
  namespace: atriarch-logging
spec:
  storageClassName: rook-ceph-block
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 5Gi
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redisinsight #deployment name
  namespace: atriarch-logging
  labels:
    app: redisinsight #deployment label
spec:
  replicas: 1 #a single replica pod
  selector:
    matchLabels:
      app: redisinsight #which pods is the deployment managing, as defined by the pod template
  template: #pod template
    metadata:
      labels:
        app: redisinsight #label for pod/s
    spec:
      containers:
      - name:  redisinsight #Container name (DNS_LABEL, unique)
        image: redislabs/redisinsight #repo/image
        imagePullPolicy: Always #Always pull image
        volumeMounts:
        - name: db #Pod volumes to mount into the container's filesystem. Cannot be updated.
          mountPath: /db
        ports:
        - containerPort: 8001 #exposed conainer port and protocol
          protocol: TCP
      volumes:
      - name: db
        persistentVolumeClaim:
          claimName: redisinsight-data
      securityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
        #privileged: false
        #readOnlyRootFilesystem: true
        runAsUser: 1000
        runAsGroup: 3000
        fsGroup: 2000
        runAsNonRoot: true
        #fsGroupChangePolicy: "OnRootMismatch"
---
apiVersion: v1
kind: Service
metadata:
  name: redisinsight-service
  namespace: atriarch-logging # The namespace the app will use
spec:
  ports:
  - name: http
    targetPort: 8001
    port: 8001
  selector:
    app: redisinsight
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: redisinsights-ingress
  namespace: atriarch-logging # The namespace the app will use  
  annotations:
    kubernetes.io/ingress.class: traefik
spec:
  rules:
  - host: redisinsights.atriarch.systems
    http:
      paths:
      - path: /
        backend:
          serviceName: redisinsight-service
          servicePort: http
